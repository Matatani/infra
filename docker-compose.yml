services:
  backend:
    build:
      context: ../matatani-backend
      dockerfile: Dockerfile
    container_name: matatani-backend
    ports:
      - "${BE_PORT}:${BE_PORT}"
    environment:
      - BE_HOST=${BE_HOST}
      - BE_PORT=${BE_PORT}
      - ML_HOST=ml-service:${ML_PORT}
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET=matatani-bucket
      - AWS_ACCESS_KEY_ID=${MINIO_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_PASSWORD}
      - AWS_REGION=us-east-1
    depends_on:
      - ml-service
      - minio
    networks:
      - app-network

  ml-service:
    build:
      context: ../matatani-ml
      dockerfile: Dockerfile
    container_name: matatani-ml
    ports:
      - "${ML_PORT}:${ML_PORT}"
    environment:
      - S3_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=${MINIO_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_PASSWORD}
      - AWS_REGION=us-east-1
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: matatani-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}         
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    command: server /data --console-address ":9001"
    networks:
      - app-network
    
  frontend:
    build:
      context: ../matatani-frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    container_name: matatani-frontend
    ports:
      - "${FE_PORT}:${FE_PORT}"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  minio-data:
